# Определение пакетов для удаления
$remove_appx = @("WindowsDefender");
$provisioned = Get-AppxProvisionedPackage -Online;
$appxpackage = Get-AppxPackage -AllUsers;
$eol = @();
$store = 'HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Appx\AppxAllUserStore';
$users = @('S-1-5-18');

if (Test-Path $store) {
    $users += $((Get-ChildItem $store -ErrorAction 0 | Where-Object { $_ -like '*S-1-5-21*' }).PSChildName)
}

foreach ($choice in $remove_appx) {
    if ('' -eq $choice.Trim()) { continue }

    # Удаление подготовленных пакетов
    foreach ($appx in $($provisioned | Where-Object { $_.PackageName -like "*$choice*" })) {
        $PackageName = $appx.PackageName;
        $PackageFamilyName = ($appxpackage | Where-Object { $_.Name -eq $appx.DisplayName }).PackageFamilyName

        New-Item "$store\Deprovisioned\$PackageFamilyName" -Force > $null;
        foreach ($sid in $users) {
            New-Item "$store\EndOfLife\$sid\$PackageName" -Force > $null
        }
        $eol += $PackageName;

        Dism /online /Set-NonRemovableAppPolicy /PackageFamily:$PackageFamilyName /NonRemovable:0 > $null;
        Remove-AppxProvisionedPackage -PackageName $PackageName -Online -AllUsers > $null;
    }

    # Удаление установленных пакетов
    foreach ($appx in $($appxpackage | Where-Object { $_.PackageFullName -like "*$choice*" })) {
        $PackageFullName = $appx.PackageFullName;

        New-Item "$store\Deprovisioned\$appx.PackageFamilyName" -Force > $null;
        foreach ($sid in $users) {
            New-Item "$store\EndOfLife\$sid\$PackageFullName" -Force > $null
        }
        $eol += $PackageFullName;

        Dism /online /Set-NonRemovableAppPolicy /PackageFamily:$appx.PackageFamilyName /NonRemovable:0 > $null;
        Remove-AppxPackage -Package $PackageFullName -AllUsers > $null;
    }
}

# Отключение службы Защитника Windows
try {
    Set-Service -Name WinDefend -StartupType Disabled -ErrorAction Stop
    Stop-Service -Name WinDefend -Force -ErrorAction Stop
} catch {
    Write-Host "Не удалось отключить или остановить службу WinDefend: $_"
}

# Удаление политик безопасности WiSiPolicy.p7b
Remove-Item -LiteralPath "$((Get-Partition | Where-Object IsSystem).AccessPaths[0])Microsoft\Boot\WiSiPolicy.p7b" -ErrorAction SilentlyContinue
Remove-Item -LiteralPath "$env:windir\System32\CodeIntegrity\WiSiPolicy.p7b" -ErrorAction SilentlyContinue
Remove-Item -LiteralPath "$env:windir\Boot\EFI\wisipolicy.p7b" -ErrorAction SilentlyContinue
Remove-Item -Path "$env:windir\WinSxS" -Include *winsipolicy.p7b* -Recurse -ErrorAction SilentlyContinue

# Удаление политик безопасности Windows Defender
Remove-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows Defender" -Recurse -Force -ErrorAction SilentlyContinue
Remove-Item -Path "HKLM:\SOFTWARE\Microsoft\Windows Defender" -Recurse -Force -ErrorAction SilentlyContinue

# Удаление файлов Защитника Windows
Remove-Item -Path "$env:ProgramFiles\Windows Defender" -Recurse -Force -ErrorAction SilentlyContinue
Remove-Item -Path "$env:ProgramFiles (x86)\Windows Defender" -Recurse -Force -ErrorAction SilentlyContinue

# Удаление системных файлов Защитника Windows
Remove-Item -Path "$env:windir\System32\mpengine.dll" -Force -ErrorAction SilentlyContinue
Remove-Item -Path "$env:windir\System32\mpclient.dll" -Force -ErrorAction SilentlyContinue
Remove-Item -Path "$env:windir\System32\msmpeng.exe" -Force -ErrorAction SilentlyContinue
Remove-Item -Path "$env:windir\System32\en-US\msmpeng.exe.mui" -Force -ErrorAction SilentlyContinue

# Удаление задач планировщика Защитника Windows
Get-ScheduledTask -TaskName *WindowsDefender* | Unregister-ScheduledTask -Confirm:$false -ErrorAction SilentlyContinue

Write-Output "Защитник Windows удален."
